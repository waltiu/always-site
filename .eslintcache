[{"D:\\always-site\\always-site\\.eslintrc.js":"1","D:\\always-site\\always-site\\compoments\\Image\\index.js":"2","D:\\always-site\\always-site\\compoments\\Intro\\Clock\\index.tsx":"3","D:\\always-site\\always-site\\compoments\\Intro\\Hot\\index.tsx":"4","D:\\always-site\\always-site\\compoments\\Intro\\index.tsx":"5","D:\\always-site\\always-site\\compoments\\Intro\\Weather\\index.tsx":"6","D:\\always-site\\always-site\\compoments\\Label\\Common\\TagModal\\index.tsx":"7","D:\\always-site\\always-site\\compoments\\Label\\Handle\\index.tsx":"8","D:\\always-site\\always-site\\compoments\\Label\\index.tsx":"9","D:\\always-site\\always-site\\compoments\\Label\\Tag\\index.tsx":"10","D:\\always-site\\always-site\\compoments\\Label\\Title\\index.tsx":"11","D:\\always-site\\always-site\\compoments\\TopNav\\index.tsx":"12","D:\\always-site\\always-site\\composables\\useLabel.tsx":"13","D:\\always-site\\always-site\\next-env.d.ts":"14","D:\\always-site\\always-site\\next.config.js":"15","D:\\always-site\\always-site\\pages\\index.tsx":"16","D:\\always-site\\always-site\\pages\\_app.tsx":"17","D:\\always-site\\always-site\\static\\constant.js":"18","D:\\always-site\\always-site\\static\\ids\\mxnzp.js":"19","D:\\always-site\\always-site\\types\\baidu.tsx":"20","D:\\always-site\\always-site\\types\\intro.tsx":"21","D:\\always-site\\always-site\\types\\label.tsx":"22","D:\\always-site\\always-site\\util\\index.tsx":"23"},{"size":545,"mtime":1650610721506,"results":"24","hashOfConfig":"25"},{"size":452,"mtime":1650553929483,"results":"26","hashOfConfig":"25"},{"size":4848,"mtime":1650553929504,"results":"27","hashOfConfig":"25"},{"size":4217,"mtime":1650553929539,"results":"28","hashOfConfig":"25"},{"size":318,"mtime":1650553929544,"results":"29","hashOfConfig":"25"},{"size":1337,"mtime":1650553929542,"results":"30","hashOfConfig":"25"},{"size":3240,"mtime":1650553929547,"results":"31","hashOfConfig":"25"},{"size":2079,"mtime":1650553929559,"results":"32","hashOfConfig":"25"},{"size":4480,"mtime":1650556301553,"results":"33","hashOfConfig":"25"},{"size":1314,"mtime":1650610773027,"results":"34","hashOfConfig":"25"},{"size":1635,"mtime":1650553929564,"results":"35","hashOfConfig":"25"},{"size":1350,"mtime":1650553929569,"results":"36","hashOfConfig":"25"},{"size":2815,"mtime":1650553929570,"results":"37","hashOfConfig":"25"},{"size":206,"mtime":1650553609528,"results":"38","hashOfConfig":"25"},{"size":288,"mtime":1650610462374,"results":"39","hashOfConfig":"25"},{"size":942,"mtime":1650611154963,"results":"40","hashOfConfig":"25"},{"size":325,"mtime":1650556967713,"results":"41","hashOfConfig":"25"},{"size":8787,"mtime":1650526857718,"results":"42","hashOfConfig":"25"},{"size":98,"mtime":1649334925831,"results":"43","hashOfConfig":"25"},{"size":127,"mtime":1649242166405,"results":"44","hashOfConfig":"25"},{"size":95,"mtime":1649342164117,"results":"45","hashOfConfig":"25"},{"size":526,"mtime":1650531452473,"results":"46","hashOfConfig":"25"},{"size":977,"mtime":1650547581814,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ttjjfi",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":3,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":3,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":2,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":2,"fixableWarningCount":4,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":1,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":15,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":1,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":12,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":9,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":8,"fixableWarningCount":1,"source":"129"},"D:\\always-site\\always-site\\.eslintrc.js",[],[],"D:\\always-site\\always-site\\compoments\\Image\\index.js",[],[],"D:\\always-site\\always-site\\compoments\\Intro\\Clock\\index.tsx",["130","131","132","133","134","135","136","137","138"],[],"import classNames from 'classnames'\r\nimport { useEffect } from 'react'\r\nimport cardStyles from 'styles/card.module.scss'\r\nimport styles from './index.module.scss'\r\nconst Clock =()=>{\r\n    useEffect(()=>{\r\n        var canvas = document.querySelector('canvas');\r\n        var ctx = canvas!.getContext('2d') as any;\r\n        var nowDate = new Date();\r\n        var second = nowDate.getSeconds();\r\n        var minute = nowDate.getMinutes();\r\n        var hour = nowDate.getHours();\r\n        draw()\r\n        \r\n        function draw() {\r\n            nowDate = new Date();\r\n            second = nowDate.getSeconds();\r\n            minute = nowDate.getMinutes();\r\n            hour = nowDate.getHours();\r\n            ctx.clearRect(0, 0, 800, 800);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            for (var i = 0; i < 60; i++) {\r\n                if ((i + 5) % 5 === 0) {\r\n                    continue;\r\n                }\r\n                ctx.moveTo(Math.cos((i * 6) / 180 * Math.PI) * 350 + 400, Math.sin((i * 6) / 180 * Math.PI) * 350 + 400);\r\n                ctx.lineTo(Math.cos((i * 6) / 180 * Math.PI) * 335 + 400, Math.sin((i * 6) / 180 * Math.PI) * 335 + 400);\r\n            }\r\n            ctx.save();\r\n            ctx.closePath();\r\n            ctx.lineWidth = 7;\r\n            ctx.strokeStyle = '#000';\r\n            ctx.stroke();\r\n        \r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            for (var i = 1; i < 13; i++) {\r\n                ctx.moveTo(Math.cos((i * 30) / 180 * Math.PI) * 350 + 400, -Math.sin((i * 30) / 180 * Math.PI) * 350 + 400);\r\n                ctx.lineTo(Math.cos((i * 30) / 180 * Math.PI) * 320 + 400, -Math.sin((i * 30) / 180 * Math.PI) * 320 + 400);\r\n                ctx.font = \"50px Arial\";\r\n                if (i > 9) {\r\n                    ctx.fillText(i, Math.cos((i * 30 - 90) / 180 * Math.PI) * 280 + 400 - 25, Math.sin((i * 30 - 90) / 180 * Math.PI) * 280 + 400 + 25);\r\n                } else {\r\n                    ctx.fillText(i, Math.cos((i * 30 - 90) / 180 * Math.PI) * 280 + 388, Math.sin((i * 30 - 90) / 180 * Math.PI) * 280 + 400 + 20);\r\n                }\r\n            }\r\n            ctx.lineWidth = 11;\r\n            ctx.strokeStyle = '#000';\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            ctx.restore();\r\n        \r\n            ctx.beginPath();\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText('ALWAYS - SITE', 320, 560)\r\n            ctx.closePath();\r\n        \r\n            ctx.beginPath();\r\n            ctx.moveTo(Math.cos((hour * 30 + minute / 2 - 90) / 180 * Math.PI) * 220 + 400, Math.sin((hour * 30 + minute / 2 - 90) / 180 * Math.PI) * 220 + 400);\r\n            ctx.lineTo(400, 400);\r\n            ctx.save();\r\n            ctx.lineCap = \"round\";\r\n            ctx.closePath();\r\n            ctx.shadowOffsetX = -5;\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowColor = \"#000\";\r\n            ctx.lineWidth = 24;\r\n            ctx.strokeStyle = '#222';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        \r\n            ctx.beginPath();\r\n            ctx.moveTo(Math.cos((minute * 6 + second * 0.1 - 90) / 180 * Math.PI) * 300 + 400, Math.sin((minute * 6 + second * 0.1 - 90) / 180 * Math.PI) * 300 + 400);\r\n            ctx.lineTo(400, 400);\r\n            ctx.save();\r\n            ctx.closePath();\r\n            ctx.shadowOffsetX = -5;\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowColor = \"#000\";\r\n            ctx.lineWidth = 13;\r\n            ctx.strokeStyle = '#222';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        \r\n            ctx.beginPath();\r\n            ctx.moveTo(Math.cos((second * 6 - 90) / 180 * Math.PI) * 345 + 400, Math.sin((second * 6 - 90) / 180 * Math.PI) * 345 + 400);\r\n            ctx.lineTo(400, 400);\r\n            ctx.save();\r\n            ctx.closePath();\r\n            ctx.shadowOffsetX = -5;\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowColor = \"#000\";\r\n            ctx.lineWidth = 5;\r\n            ctx.strokeStyle = 'rgb(213, 153, 0)';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n            ctx.closePath();\r\n        \r\n            ctx.save();\r\n            ctx.arc(400, 400, 20, 0, Math.PI * 2);\r\n            ctx.shadowOffsetX = -5;\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowColor = \"#000\";\r\n            ctx.fillStyle = 'rgb(213, 153, 0)';\r\n            ctx.fill();\r\n            ctx.restore();\r\n        }\r\n        setInterval(function() {\r\n            draw();\r\n        }, 1000);\r\n    },[])\r\n    return (\r\n        <div className={classNames(cardStyles.card,styles.clock)}>\r\n             <div className={styles.content}>\r\n             <canvas id=\"clock-canvas\" width=\"800\" height=\"800\">您的浏览器不支持canvas，请更换浏览器！</canvas>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock","D:\\always-site\\always-site\\compoments\\Intro\\Hot\\index.tsx",["139","140","141","142","143","144","145"],[],"import classNames from \"classnames\";\r\nimport { Tabs, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { HotMessageType } from \"types/intro\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { newsHotList } from \"static/constant\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Image from \"compoments/Image\";\r\nimport styles from \"./index.module.scss\";\r\nimport cardStyles from \"styles/card.module.scss\";\r\n\r\ntype HotDataType = {\r\n  [name: string]: [HotMessageType];\r\n};\r\nconst { TabPane } = Tabs;\r\n\r\nlet timer:any=''\r\n\r\nconst Hot = () => {\r\n  const [currentKey, setCurrentKey] = useState(newsHotList[0].name);\r\n  const [hotData, setHotData] = useState<HotDataType>({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const currentKeyRef=useRef()\r\n  currentKeyRef.current=currentKey as any\r\n\r\n  const queryData = async (isRefresh?: boolean) => {\r\n    const currentHot = newsHotList.find((item) => item.name === currentKey);\r\n    if (hotData[currentHot!.name] && !isRefresh) {\r\n      return \"\";\r\n    }\r\n    setLoading(true);\r\n    axios.get(currentHot!.url).then((res) => {\r\n      setLoading(false);\r\n      setHotData({\r\n        ...hotData,\r\n        [currentHot!.name]: currentHot!.tranferData(res?.data),\r\n      });\r\n    });\r\n  };\r\n\r\n  const setIntervalChange=()=>{\r\n    if(newsHotList.length>1){\r\n      timer=setInterval(()=>{\r\n        const currentIndex=newsHotList.findIndex(item=>item.name===currentKeyRef.current)\r\n        const updateName=currentIndex===newsHotList.length-1?newsHotList[0].name:newsHotList[currentIndex+1].name\r\n        setCurrentKey(updateName)\r\n      },5000)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    queryData();\r\n  }, [currentKey]);\r\n  useEffect(()=>{\r\n    setIntervalChange()\r\n  },[])\r\n  return (\r\n    <div className={classNames(cardStyles.card, styles.hot)} onMouseEnter={()=>{\r\n      clearInterval(timer)\r\n    }}\r\n    onMouseLeave={()=>{\r\n      setIntervalChange()\r\n    }}\r\n    >\r\n      <div className={styles.label}>\r\n        <div className={styles.title}>热搜榜</div>\r\n        <div className={styles.refresh} onClick={() => queryData(true)}>\r\n          <SyncOutlined />\r\n          <span>刷新</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles[\"list-tab\"]}>\r\n        <Tabs\r\n          onChange={(e) => {\r\n            setCurrentKey(e);\r\n          }}\r\n          activeKey={currentKey}\r\n        >\r\n          {newsHotList.map((item) => {\r\n            const newsHotList = hotData[item.name] || [];\r\n            return (\r\n              <TabPane\r\n                tab={\r\n                  <span className={styles[\"tab-title\"]}>\r\n                    <div className={styles[\"tab-icon\"]}>\r\n                      <Image src={item.icon} width={16} height={16} alt=\"\" />\r\n                    </div>\r\n                    {item.name}\r\n                  </span>\r\n                }\r\n                key={item.name}\r\n              >\r\n                <Spin spinning={loading}>\r\n                  <div className={styles[\"host-list\"]}>\r\n                    {newsHotList.length ? (\r\n                      newsHotList.map((item: HotMessageType, index: number) => {\r\n                        return (\r\n                          <div className={styles[\"hot-item\"]} key={item.text}>\r\n                            <div className={styles.index}>{index + 1}</div>\r\n                            <div className={styles.text}>\r\n                              <a\r\n                                href={item.link}\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                              >\r\n                                {item.text}\r\n                              </a>\r\n                            </div>\r\n                            <div className={styles[\"hot-value\"]}>\r\n                              {item.hotValue}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </Spin>\r\n              </TabPane>\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hot;\r\n","D:\\always-site\\always-site\\compoments\\Intro\\index.tsx",[],[],"D:\\always-site\\always-site\\compoments\\Intro\\Weather\\index.tsx",["146","147","148","149","150"],[],"D:\\always-site\\always-site\\compoments\\Label\\Common\\TagModal\\index.tsx",["151","152","153","154","155"],[],"import { Modal, Input, Button, message } from \"antd\";\r\nimport { FC, useState } from \"react\";\r\nimport { uuid,validateIsSite } from \"util/index\";\r\nimport { TagType, LabelType, SetLabelMethodType } from \"types/label\";\r\nimport Image from \"compoments/Image\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport styles from \"./index.module.scss\";\r\n\r\ntype TagModalProps = {\r\n  currentLabel: LabelType;\r\n  labels: LabelType[];\r\n  title?: string;\r\n  record?: TagType;\r\n  visible: boolean;\r\n  onCancel: () => void;\r\n  operLabel: SetLabelMethodType;\r\n};\r\nconst initialSites = {\r\n  id: uuid(),\r\n  name: \"\",\r\n  link: \"\",\r\n  icon: \"\",\r\n};\r\n\r\nconst TagModal: FC<TagModalProps> = ({\r\n  visible,\r\n  record,\r\n  title,\r\n  labels,\r\n  currentLabel,\r\n  onCancel,\r\n  operLabel,\r\n}) => {\r\n  const { index:labelIndex } = currentLabel;\r\n  const [site, setNewSite] = useState<TagType>(initialSites);\r\n  const changeAddress = (url: string) => {\r\n    site.link = url;\r\n    setNewSite(site);\r\n  };\r\n  const changeIcon = () => {};\r\n\r\n  const changeName = (name: string) => {\r\n    site.name = name;\r\n    setNewSite(site);\r\n  };\r\n\r\n  const addTag=(continuer:boolean)=>{\r\n    if(validateIsSite(site)){\r\n      const newLabels=[...labels]\r\n      newLabels[labelIndex as number ].tags.push(site)\r\n      console.log(newLabels,'newlabels')\r\n      operLabel(newLabels)\r\n      if(continuer){\r\n        setNewSite(JSON.parse(JSON.stringify({\r\n          ...initialSites,\r\n          id:uuid()\r\n        })))\r\n      }else{\r\n        onCancel()\r\n      }\r\n    }else{\r\n      message.error('请输入合法的url和名称！')\r\n    }\r\n\r\n  }\r\n  console.log(site,'site')\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title={title || record ? \"修改网址\" : \"添加网址\"}\r\n        visible={visible}\r\n        footer={null}\r\n        destroyOnClose={true}\r\n        onCancel={onCancel}\r\n        className={styles[\"tag-modal\"]}\r\n      >\r\n        <>\r\n          <div key={site.id}>\r\n            <div className={styles.name}>\r\n              <div className={styles.icon}>\r\n                {site.icon ? (\r\n                  <Image\r\n                    src={site.icon || \"./\"}\r\n                    alt=\"\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                  />\r\n                ) : (\r\n                  <UploadOutlined />\r\n                )}\r\n              </div>\r\n              <Input\r\n                defaultValue={site.name}\r\n                className={styles.input}\r\n                placeholder=\"网站名称\"\r\n                onChange={(e) => {\r\n                  changeName(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <Input\r\n              defaultValue={site.link}\r\n              className={styles.input}\r\n              placeholder=\"网站地址，如：http://www.baidu.com\"\r\n              onChange={(e) => {\r\n                changeAddress(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.oper}>\r\n            <Button onClick={()=>{addTag(true)}}>保存后继续添加</Button>\r\n            <Button type=\"primary\" onClick={()=>{addTag(false)}}>保存</Button>\r\n          </div>\r\n        </>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagModal;\r\n","D:\\always-site\\always-site\\compoments\\Label\\Handle\\index.tsx",["156","157","158","159","160","161"],[],"import {\r\n  AppstoreAddOutlined,\r\n  DeleteRowOutlined,\r\n  InsertRowBelowOutlined,\r\n} from \"@ant-design/icons\";\r\nimport classNames from \"classnames\";\r\nimport TagModal from \"../Common/TagModal\";\r\nimport { LabelType, SetLabelMethodType } from \"types/label\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst Handle = ({\r\n  isOpen,\r\n  index,\r\n  currentLabel,\r\n  labels,\r\n  setIsOperingId,\r\n  operLabel,\r\n}: {\r\n  isOpen: boolean;\r\n  index: number;\r\n  labels:LabelType[],\r\n  currentLabel:LabelType,\r\n  setIsOperingId: () => void;\r\n  operLabel: SetLabelMethodType;\r\n}) => {\r\n  const [tagModalVisible, setTagModalVisible] = useState<boolean>(false);\r\n  const {title}=currentLabel\r\n  return (\r\n    <div className={classNames(styles.oper, isOpen ? styles[\"is-open\"] : \"\")}>\r\n      <div className={styles.detail}>\r\n        <div\r\n          className={styles.icon}\r\n          onClick={() => {\r\n            operLabel(index, \"addLabel\");\r\n          }}\r\n        >\r\n          <span>\r\n            <InsertRowBelowOutlined />\r\n          </span>\r\n        </div>\r\n        <div className={styles.icon} onClick={()=>{\r\n          setTagModalVisible(true)\r\n        }}>\r\n          <span>\r\n            <AppstoreAddOutlined />\r\n          </span>\r\n        </div>\r\n\r\n        <div\r\n          className={styles.icon}\r\n          onClick={() => {\r\n            operLabel(title, \"deleteLabel\");\r\n          }}\r\n        >\r\n          <span>\r\n            <DeleteRowOutlined />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={styles[\"oper-icon\"]}\r\n        onClick={() => {\r\n          setIsOperingId();\r\n        }}\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      {tagModalVisible && (\r\n        <TagModal\r\n          currentLabel={currentLabel}\r\n          labels={labels}\r\n          visible={Boolean(tagModalVisible)}\r\n          operLabel={operLabel}\r\n          onCancel={() => {\r\n            setTagModalVisible(false);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Handle;\r\n","D:\\always-site\\always-site\\compoments\\Label\\index.tsx",["162","163","164","165","166"],[],"import useLabel from \"composables/useLabel\";\r\nimport { useState } from \"react\";\r\nimport Tag from \"./Tag\";\r\nimport { HOT_LABEL, OTHER_LABEL } from \"static/constant\";\r\nimport { TagType, LabelType, SortQueueType } from \"types/label\";\r\nimport LabelTitle from \"./Title\";\r\nimport Image from \"../Image\";\r\nimport styles from \"./index.module.scss\";\r\nimport CardStyle from \"styles/card.module.scss\";\r\nimport hotImg from \"static/images/hot.svg\";\r\nimport classNames from \"classnames\";\r\nimport Handle from \"./Handle\";\r\nimport TagModal from \"./Common/TagModal\";\r\n\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nlet sortQueue: SortQueueType = []; // 跨label拖拽进行，将多个list统一更新\r\n\r\nconst filterDragItem = \".is-hot\"; // 最热特殊标记，并禁止操作\r\n\r\nconst Label = () => {\r\n  const [labels, operLabel] = useLabel();\r\n  const [isOperingId, setIsOperingId] = useState<null | string>(null);\r\n\r\n  return (\r\n    <div>\r\n      {labels?.length && (\r\n        <ReactSortable\r\n          group={{ name: \"labels\", pull: true }}\r\n          animation={200}\r\n          delay={2}\r\n          delayOnTouchOnly={true}\r\n          forceFallback={true}\r\n          list={labels}\r\n          handle=\".oper\"\r\n          setList={(data) => {\r\n            // 热门禁止拖拽\r\n            if (data[0].title === HOT_LABEL) {\r\n              operLabel(data);\r\n            }\r\n          }}\r\n          filter={filterDragItem}\r\n        >\r\n          {(labels || []).map((label: LabelType, index: number) => {\r\n            const { title = OTHER_LABEL, tags, id } = label;\r\n            const currentLabel={...label,index}\r\n            return (\r\n              <div\r\n                key={id}\r\n                className={classNames(\r\n                  styles[\"label-box\"],\r\n                  CardStyle.card,\r\n                  title === HOT_LABEL ? filterDragItem : \"\",\r\n                  styles[title === HOT_LABEL ? filterDragItem : \"\"]\r\n                )}\r\n              >\r\n                {title === HOT_LABEL ? (\r\n                  <>\r\n                    <div className={styles.hot}>\r\n                      <Image src={hotImg} alt=\"\" />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <LabelTitle\r\n                      label={label}\r\n                      labels={labels}\r\n                      operLabel={operLabel}\r\n                    />\r\n\r\n                    <div className={classNames(styles.oper, \"oper\")}>\r\n                      <Handle\r\n                        currentLabel={currentLabel}\r\n                        labels={labels}\r\n                        index={index}\r\n                        isOpen={isOperingId == id}\r\n                        setIsOperingId={() => {\r\n                          setIsOperingId(id === isOperingId ? null : id);\r\n                        }}\r\n                        operLabel={operLabel}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                <div className={styles.tags}>\r\n                  <ReactSortable\r\n                    group={{ name: \"tags\", pull: true }}\r\n                    animation={200}\r\n                    delay={2}\r\n                    list={tags || []}\r\n                    forceFallback={true}\r\n                    delayOnTouchOnly={true}\r\n                    onEnd={() => {\r\n                      operLabel(sortQueue, \"sortTag\");\r\n                    }}\r\n                    dragClass=\"is-checked\"\r\n                    onStart={() => {\r\n                      sortQueue = [];\r\n                    }}\r\n                    setList={(data, _, { dragging }) => {\r\n                      if (\r\n                        dragging &&\r\n                        JSON.stringify(dragging.props.list) !==\r\n                          JSON.stringify(data)\r\n                      ) {\r\n                        sortQueue.push({\r\n                          index,\r\n                          data,\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {(tags || []).map((item: TagType, index: number) => (\r\n                      <div key={`${item.id}-${index}`}>\r\n                        <Tag data={item} />\r\n                      </div>\r\n                    ))}\r\n                  </ReactSortable>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </ReactSortable>\r\n      )}\r\n  \r\n    </div>\r\n  );\r\n};\r\nexport default Label;\r\n","D:\\always-site\\always-site\\compoments\\Label\\Tag\\index.tsx",["167"],[],"import { FC, useState } from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport styles from \"./index.module.scss\";\r\nimport Image from \"compoments/Image\";\r\nimport defaultImg from 'static/images/site.svg'\r\nimport classNames from \"classnames\";\r\ntype TagPropsType = {\r\n  data: any;\r\n};\r\n\r\nconst Tag: FC<TagPropsType> = ({ data }) => {\r\n  const [isChecked,setIscChecked]=useState(false)\r\n  const renderContent=()=>{\r\n    return (\r\n      <div>\r\n        <div>\r\n        <div>复制链接</div>\r\n        </div>\r\n        <div>\r\n          <div>编辑</div>\r\n          <div>删除</div>\r\n\r\n        </div>\r\n\r\n        <div>\r\n          <div>添加子网址</div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classNames(styles.tag,isChecked?styles['is-checked']:'' )}>\r\n      <Image src={data.icon||defaultImg} alt=\"\" width={20} height={20} />\r\n      <div className={styles.name}>\r\n        <a href={data.link} target=\"_blank\" rel=\"noreferrer\">\r\n          {data.name}\r\n        </a>\r\n      </div>\r\n        <Popover content={renderContent()}\r\n        placement={\"bottom\"}\r\n        onVisibleChange={(visible)=>{\r\n          setIscChecked(visible)\r\n        }}\r\n      >\r\n      <div className={styles.oper}>\r\n\r\n        ...\r\n        </div>\r\n\r\n        </Popover>\r\n    </div>\r\n  );\r\n};\r\nexport default Tag;\r\n","D:\\always-site\\always-site\\compoments\\Label\\Title\\index.tsx",["168","169","170"],[],"import { LabelType, SetLabelMethodType } from \"types/label\";\r\nimport { OTHER_LABEL } from \"static/constant\";\r\nimport styles from \"./index.module.scss\";\r\nimport { useState, FocusEvent, useRef } from \"react\";\r\nimport { Input, InputRef } from \"antd\";\r\nconst LabelTitle = ({\r\n  label,\r\n  labels,\r\n  operLabel,\r\n}: {\r\n  label: LabelType;\r\n  labels: LabelType[];\r\n  operLabel: SetLabelMethodType;\r\n}) => {\r\n\r\n  const { id,title } = label;\r\n\r\n  const [isInput, setIsInput] = useState(false);\r\n  const inputRef = useRef<InputRef>(null);\r\n\r\n  const changeLabelName = (name: string) => {\r\n    const currentLabelIndex = labels.findIndex((item) => item.id === id);\r\n    if (currentLabelIndex > 0) {\r\n      const newLabels = [...labels];\r\n      newLabels[currentLabelIndex].title = name;\r\n      operLabel(newLabels);\r\n      setIsInput(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.title}>\r\n        {isInput ? (\r\n          <Input\r\n            bordered={false}\r\n            ref={inputRef}\r\n            defaultValue={title}\r\n            onBlur={(e: FocusEvent<HTMLInputElement, Element>) => {\r\n              changeLabelName(e.target.value);\r\n            }}\r\n            onPressEnter={() => {\r\n              inputRef.current?.blur();\r\n            }}\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={() => {\r\n              setIsInput(true);\r\n              setTimeout(() => {\r\n                inputRef.current?.focus();\r\n              }, 0);\r\n            }}\r\n          >\r\n            {title || OTHER_LABEL}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelTitle;\r\n","D:\\always-site\\always-site\\compoments\\TopNav\\index.tsx",["171","172"],[],"import { Input } from \"antd\";\r\nimport jsonp from \"jsonp\";\r\nimport styles from \"./index.module.scss\";\r\nimport { BaiduSugListType, BaiduSugItemType } from \"types/baidu\";\r\nimport { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nconst TopNav = () => {\r\n  const [sugList, setSugList] = useState<Array<string>>();\r\n  const querySearch = async (e: any) => {\r\n    await jsonp(\r\n      `https://www.baidu.com/sugrec?prod=pc&wd=${e.target.value}`,\r\n      {},\r\n      (err, data: BaiduSugListType) => {\r\n        const result = (data.g || []).map((item: BaiduSugItemType) => item.q);\r\n        setSugList(result);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(styles[\"top-nav\"])}>\r\n      <div className={styles[\"search-box\"]}>\r\n        <Input\r\n          className={styles.search}\r\n          placeholder=\"Borderless\"\r\n          bordered={false}\r\n          onChange={querySearch}\r\n        />\r\n      </div>\r\n          <div className={classNames(styles[\"result-box\"])} style={sugList?.length?{maxHeight:'300px'}:{visibility:'hidden'}}>\r\n            {(sugList||[]).map((item) => {\r\n              return (\r\n                <div key={item} className={styles[\"result-item\"]}>\r\n                  {item}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","D:\\always-site\\always-site\\composables\\useLabel.tsx",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],[],"import { useEffect, useState } from \"react\";\r\nimport { defaultTag } from \"static/constant\";\r\nimport { uuid, uniqueTags } from \"util/index\";\r\nimport {\r\n  TagType,\r\n  LabelType,\r\n  useLabelRetrunType,\r\n  SortQueueType,\r\n} from \"types/label\";\r\nimport { message } from \"antd\";\r\n\r\nconst CACHE_LABELS_KEY = \"cache-labels\";\r\n\r\nconst useLabel = (): useLabelRetrunType => {\r\n  const [labels, setLables] = useState<Array<LabelType>>([]);\r\n\r\n  const updateLabels = (newLabels: Array<LabelType>) => {\r\n    setLables(uniqueTags(newLabels));\r\n    localStorage.setItem(CACHE_LABELS_KEY, JSON.stringify(newLabels));\r\n  };\r\n\r\n  const deleteTag = (tag: TagType) => {};\r\n\r\n  const changeTag = (tag: TagType) => {};\r\n\r\n  const heatTag = (tag: TagType) => {};\r\n\r\n  const unHeatTag = (tag: TagType) => {};\r\n\r\n  const addLabel = (index: number) => {\r\n    const newLabels = [...labels];\r\n    newLabels.splice(index + 1, 0, {\r\n      title: \"新增\",\r\n      id: `label-${uuid()}`,\r\n      tags: [],\r\n    });\r\n    updateLabels(newLabels);\r\n  };\r\n\r\n  const deleteLabel = (title: string) => {\r\n    if(labels.length>2){\r\n      const labelIndex = labels.findIndex((item) => item.title === title);\r\n      const newLabels = [...labels];\r\n      if (labelIndex > 0) {\r\n        newLabels.splice(labelIndex, 1);\r\n      }\r\n      updateLabels(newLabels);\r\n    }else{\r\n      message.warn('请至少保留一个卡片！')\r\n    }\r\n\r\n  };\r\n\r\n  const sortTag = (params: SortQueueType) => {\r\n    if (params.length > 0) {\r\n      if (params[0].index === 0) {\r\n        params = [params[0]];\r\n      }\r\n      const newLabels = [...labels];\r\n      params.map((item) => {\r\n        newLabels[item.index].tags = item.data;\r\n      });\r\n      updateLabels(newLabels);\r\n    }\r\n  };\r\n\r\n  const initTags = () => {\r\n    if (labels.length) {\r\n      return \"\";\r\n    }\r\n    const cacheLabels = localStorage.getItem(CACHE_LABELS_KEY);\r\n    const newLabels = (cacheLabels ? JSON.parse(cacheLabels) : defaultTag).map(\r\n      (item: LabelType) => {\r\n        return {\r\n          ...item,\r\n          id: `label-${uuid()}`,\r\n          tags: (item.tags || []).map((tag) => {\r\n            return {\r\n              ...tag,\r\n              id: `tag-${uuid()}`,\r\n            };\r\n          }),\r\n        };\r\n      }\r\n    );\r\n    updateLabels(newLabels);\r\n  };\r\n  useEffect(() => {\r\n    initTags();\r\n  });\r\n\r\n  const operMethodObject = {\r\n    deleteTag: deleteTag,\r\n    heatTag: heatTag,\r\n    sortTag: sortTag,\r\n    addLabel: addLabel,\r\n    deleteLabel: deleteLabel,\r\n  };\r\n\r\n  return [\r\n    labels,\r\n    (data, oper) => {\r\n      if (oper && operMethodObject[oper as keyof typeof operMethodObject]) {\r\n        // @ts-ignore\r\n        operMethodObject[oper as keyof typeof operMethodObject](data);\r\n      } else {\r\n        updateLabels(data);\r\n      }\r\n    },\r\n  ];\r\n};\r\nexport default useLabel;\r\n","D:\\always-site\\always-site\\next-env.d.ts",[],[],"D:\\always-site\\always-site\\next.config.js",[],[],"D:\\always-site\\always-site\\pages\\index.tsx",["189","190","191","192","193","194"],[],"D:\\always-site\\always-site\\pages\\_app.tsx",[],[],"D:\\always-site\\always-site\\static\\constant.js",["195","196","197","198"],[],"D:\\always-site\\always-site\\static\\ids\\mxnzp.js",[],[],"D:\\always-site\\always-site\\types\\baidu.tsx",["199","200","201"],[],"export type BaiduSugItemType={\r\n    type:\"sug\",\r\n    q:string\r\n}\r\n\r\nexport type BaiduSugListType={\r\n    g:[BaiduSugItemType]\r\n}","D:\\always-site\\always-site\\types\\intro.tsx",["202","203","204"],[],"export type HotMessageType={\r\n    text:string,\r\n    hotValue:string|number,\r\n    link:string\r\n}","D:\\always-site\\always-site\\types\\label.tsx",["205","206","207","208","209","210","211","212","213","214","215","216","217","218"],[],"export type TagType={\r\n    name: string,\r\n    link: string,\r\n    icon:string,\r\n    id:string,\r\n    index?:number\r\n}\r\nexport type operType='addTag'|'delete'|'heat'|'sortTag'|'addLabel'|'deleteLabel'\r\n\r\nexport  type LabelType={\r\n  title:string,\r\n  id:string,\r\n  tags:TagType[],\r\n  index?:number\r\n}\r\nexport type SortQueueType={\r\n index:number,\r\n data:TagType[]\r\n}[]\r\n\r\n\r\nexport type useLabelRetrunType = [\r\n tags:Array<LabelType> ,\r\n method:SetLabelMethodType\r\n];\r\nexport type SetLabelMethodType= (tag:any,oper?:operType) => void","D:\\always-site\\always-site\\util\\index.tsx",["219","220","221","222","223","224","225","226","227","228"],[],"import { LabelType,TagType } from \"types/label\";\r\nconst urlReg=/^((https|http)?:\\/\\/)[^\\s]+/;\r\n\r\nexport const queryBaidunewsHotList = async () => {\r\n  const result = await fetch(\"http://api.5cv.top/getnewsHotList\");\r\n  return result;\r\n};\r\nexport const uuid = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const uniqueTags=(data:Array<LabelType>)=>{\r\n  \r\n    return data.map((item:LabelType)=>{\r\n      return {\r\n        ...item,\r\n        tags:uniqueKey(item.tags,'id')\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const uniqueKey=(arr:any[],key:string)=> {\r\n  let map = new Map()\r\n  arr.forEach((item)=>{\r\n    if (!map.has(item[key])){\r\n      map.set(item[key],item)\r\n    }\r\n  })\r\n  return Array.from(map.values())\r\n}\r\n\r\n\r\nexport const validateIsSite =(tag:TagType)=>{\r\n  return urlReg.test(tag.link)&&tag.name\r\n}\r\n",{"ruleId":"229","severity":2,"message":"230","line":7,"column":9,"nodeType":"231","messageId":"232","endLine":7,"endColumn":55,"fix":"233"},{"ruleId":"229","severity":2,"message":"230","line":8,"column":9,"nodeType":"231","messageId":"232","endLine":8,"endColumn":51,"fix":"234"},{"ruleId":"229","severity":2,"message":"230","line":9,"column":9,"nodeType":"231","messageId":"232","endLine":9,"endColumn":34,"fix":"235"},{"ruleId":"229","severity":2,"message":"230","line":10,"column":9,"nodeType":"231","messageId":"232","endLine":10,"endColumn":43,"fix":"236"},{"ruleId":"229","severity":2,"message":"230","line":11,"column":9,"nodeType":"231","messageId":"232","endLine":11,"endColumn":43,"fix":"237"},{"ruleId":"229","severity":2,"message":"230","line":12,"column":9,"nodeType":"231","messageId":"232","endLine":12,"endColumn":39,"fix":"238"},{"ruleId":"229","severity":2,"message":"230","line":23,"column":18,"nodeType":"231","messageId":"232","endLine":23,"endColumn":27},{"ruleId":"229","severity":2,"message":"230","line":38,"column":18,"nodeType":"231","messageId":"232","endLine":38,"endColumn":27},{"ruleId":"239","severity":2,"message":"240","line":38,"column":22,"nodeType":"241","messageId":"242","endLine":38,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":4,"column":1,"nodeType":"245","messageId":"246","endLine":4,"endColumn":46,"fix":"247"},{"ruleId":"248","severity":1,"message":"249","line":12,"column":20,"nodeType":"250","messageId":"251","endLine":14,"endColumn":2,"fix":"252"},{"ruleId":"253","severity":2,"message":"254","line":17,"column":10,"nodeType":"255","messageId":"256","endLine":17,"endColumn":11,"fix":"257"},{"ruleId":"258","severity":1,"message":"259","line":54,"column":6,"nodeType":"260","endLine":54,"endColumn":18,"suggestions":"261"},{"ruleId":"262","severity":2,"message":"263","line":81,"column":19,"nodeType":"241","messageId":"264","endLine":81,"endColumn":30},{"ruleId":"262","severity":2,"message":"265","line":97,"column":40,"nodeType":"241","messageId":"264","endLine":97,"endColumn":60},{"ruleId":"266","severity":1,"message":"267","line":117,"column":23,"nodeType":"268","messageId":"269","endLine":117,"endColumn":28,"fix":"270"},{"ruleId":"271","severity":2,"message":"272","line":15,"column":18,"nodeType":"241","messageId":"273","endLine":15,"endColumn":28},{"ruleId":"274","severity":2,"message":"272","line":15,"column":18,"nodeType":"241","messageId":"273","endLine":15,"endColumn":28},{"ruleId":"271","severity":2,"message":"275","line":16,"column":20,"nodeType":"241","messageId":"273","endLine":16,"endColumn":31},{"ruleId":"274","severity":2,"message":"275","line":16,"column":20,"nodeType":"241","messageId":"273","endLine":16,"endColumn":31},{"ruleId":"258","severity":1,"message":"276","line":29,"column":6,"nodeType":"260","endLine":29,"endColumn":16,"suggestions":"277"},{"ruleId":"243","severity":1,"message":"278","line":2,"column":1,"nodeType":"245","messageId":"279","endLine":2,"endColumn":38,"fix":"280"},{"ruleId":"243","severity":1,"message":"244","line":4,"column":1,"nodeType":"245","messageId":"246","endLine":4,"endColumn":70,"fix":"281"},{"ruleId":"271","severity":2,"message":"282","line":40,"column":9,"nodeType":"241","messageId":"273","endLine":40,"endColumn":19},{"ruleId":"274","severity":2,"message":"282","line":40,"column":9,"nodeType":"241","messageId":"273","endLine":40,"endColumn":19},{"ruleId":"253","severity":2,"message":"254","line":47,"column":26,"nodeType":"255","messageId":"256","endLine":47,"endColumn":27,"fix":"283"},{"ruleId":"243","severity":1,"message":"244","line":8,"column":1,"nodeType":"245","messageId":"246","endLine":8,"endColumn":61,"fix":"284"},{"ruleId":"253","severity":2,"message":"254","line":22,"column":9,"nodeType":"255","messageId":"256","endLine":22,"endColumn":10,"fix":"285"},{"ruleId":"253","severity":2,"message":"254","line":23,"column":15,"nodeType":"255","messageId":"256","endLine":23,"endColumn":16,"fix":"286"},{"ruleId":"266","severity":1,"message":"267","line":67,"column":9,"nodeType":"268","messageId":"269","endLine":67,"endColumn":15,"fix":"287"},{"ruleId":"266","severity":1,"message":"267","line":68,"column":9,"nodeType":"268","messageId":"269","endLine":68,"endColumn":15,"fix":"288"},{"ruleId":"266","severity":1,"message":"267","line":69,"column":9,"nodeType":"268","messageId":"269","endLine":69,"endColumn":15,"fix":"289"},{"ruleId":"243","severity":1,"message":"244","line":5,"column":1,"nodeType":"245","messageId":"246","endLine":5,"endColumn":65,"fix":"290"},{"ruleId":"271","severity":2,"message":"291","line":13,"column":8,"nodeType":"241","messageId":"273","endLine":13,"endColumn":16},{"ruleId":"274","severity":2,"message":"291","line":13,"column":8,"nodeType":"241","messageId":"273","endLine":13,"endColumn":16},{"ruleId":"262","severity":2,"message":"292","line":114,"column":55,"nodeType":"241","messageId":"264","endLine":114,"endColumn":68},{"ruleId":"293","severity":1,"message":"294","line":115,"column":33,"nodeType":"295","messageId":"296","endLine":115,"endColumn":54},{"ruleId":"243","severity":1,"message":"278","line":1,"column":1,"nodeType":"245","messageId":"279","endLine":1,"endColumn":38,"fix":"297"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"246","endLine":1,"endColumn":61,"fix":"298"},{"ruleId":"243","severity":1,"message":"299","line":4,"column":1,"nodeType":"245","messageId":"279","endLine":4,"endColumn":54,"fix":"300"},{"ruleId":"243","severity":1,"message":"301","line":5,"column":1,"nodeType":"245","messageId":"279","endLine":5,"endColumn":40,"fix":"302"},{"ruleId":"243","severity":1,"message":"244","line":4,"column":1,"nodeType":"245","messageId":"246","endLine":4,"endColumn":66,"fix":"303"},{"ruleId":"304","severity":2,"message":"305","line":8,"column":42,"nodeType":"306","messageId":"307","endLine":8,"endColumn":55,"fix":"308"},{"ruleId":"243","severity":1,"message":"244","line":4,"column":1,"nodeType":"245","messageId":"246","endLine":9,"endColumn":22,"fix":"309"},{"ruleId":"304","severity":2,"message":"310","line":15,"column":40,"nodeType":"306","messageId":"307","endLine":15,"endColumn":56,"fix":"311"},{"ruleId":"304","severity":2,"message":"310","line":17,"column":36,"nodeType":"306","messageId":"307","endLine":17,"endColumn":52,"fix":"312"},{"ruleId":"271","severity":2,"message":"313","line":22,"column":22,"nodeType":"241","messageId":"273","endLine":22,"endColumn":34},{"ruleId":"274","severity":2,"message":"313","line":22,"column":22,"nodeType":"241","messageId":"273","endLine":22,"endColumn":34},{"ruleId":"271","severity":2,"message":"314","line":24,"column":9,"nodeType":"241","messageId":"273","endLine":24,"endColumn":18},{"ruleId":"274","severity":2,"message":"314","line":24,"column":9,"nodeType":"241","messageId":"273","endLine":24,"endColumn":18},{"ruleId":"271","severity":2,"message":"313","line":24,"column":22,"nodeType":"241","messageId":"273","endLine":24,"endColumn":34},{"ruleId":"274","severity":2,"message":"313","line":24,"column":22,"nodeType":"241","messageId":"273","endLine":24,"endColumn":34},{"ruleId":"271","severity":2,"message":"313","line":26,"column":20,"nodeType":"241","messageId":"273","endLine":26,"endColumn":32},{"ruleId":"274","severity":2,"message":"313","line":26,"column":20,"nodeType":"241","messageId":"273","endLine":26,"endColumn":32},{"ruleId":"271","severity":2,"message":"315","line":28,"column":9,"nodeType":"241","messageId":"273","endLine":28,"endColumn":18},{"ruleId":"274","severity":2,"message":"315","line":28,"column":9,"nodeType":"241","messageId":"273","endLine":28,"endColumn":18},{"ruleId":"271","severity":2,"message":"313","line":28,"column":22,"nodeType":"241","messageId":"273","endLine":28,"endColumn":34},{"ruleId":"274","severity":2,"message":"313","line":28,"column":22,"nodeType":"241","messageId":"273","endLine":28,"endColumn":34},{"ruleId":"316","severity":2,"message":"317","line":57,"column":9,"nodeType":"241","messageId":"318","endLine":57,"endColumn":15},{"ruleId":"271","severity":2,"message":"272","line":11,"column":25,"nodeType":"241","messageId":"273","endLine":11,"endColumn":30},{"ruleId":"274","severity":2,"message":"272","line":11,"column":25,"nodeType":"241","messageId":"273","endLine":11,"endColumn":30},{"ruleId":"271","severity":2,"message":"319","line":12,"column":9,"nodeType":"241","messageId":"273","endLine":12,"endColumn":10},{"ruleId":"274","severity":2,"message":"319","line":12,"column":9,"nodeType":"241","messageId":"273","endLine":12,"endColumn":10},{"ruleId":"271","severity":2,"message":"320","line":34,"column":30,"nodeType":"241","messageId":"273","endLine":34,"endColumn":33},{"ruleId":"274","severity":2,"message":"320","line":34,"column":30,"nodeType":"241","messageId":"273","endLine":34,"endColumn":33},{"ruleId":"271","severity":2,"message":"321","line":1,"column":10,"nodeType":"241","messageId":"273","endLine":1,"endColumn":14},{"ruleId":"271","severity":2,"message":"322","line":13,"column":39,"nodeType":"241","messageId":"273","endLine":13,"endColumn":44},{"ruleId":"271","severity":2,"message":"322","line":27,"column":38,"nodeType":"241","messageId":"273","endLine":27,"endColumn":43},{"ruleId":"271","severity":2,"message":"323","line":38,"column":7,"nodeType":"241","messageId":"273","endLine":38,"endColumn":17},{"ruleId":"253","severity":2,"message":"254","line":2,"column":9,"nodeType":"255","messageId":"256","endLine":2,"endColumn":10,"fix":"324"},{"ruleId":"253","severity":2,"message":"254","line":3,"column":6,"nodeType":"255","messageId":"256","endLine":3,"endColumn":7,"fix":"325"},{"ruleId":"253","severity":2,"message":"254","line":7,"column":6,"nodeType":"255","messageId":"256","endLine":7,"endColumn":7,"fix":"326"},{"ruleId":"253","severity":2,"message":"254","line":2,"column":9,"nodeType":"255","messageId":"256","endLine":2,"endColumn":10,"fix":"327"},{"ruleId":"253","severity":2,"message":"254","line":3,"column":13,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14,"fix":"328"},{"ruleId":"253","severity":2,"message":"254","line":4,"column":9,"nodeType":"255","messageId":"256","endLine":4,"endColumn":10,"fix":"329"},{"ruleId":"253","severity":2,"message":"254","line":4,"column":9,"nodeType":"255","messageId":"256","endLine":4,"endColumn":10,"fix":"330"},{"ruleId":"253","severity":2,"message":"254","line":5,"column":7,"nodeType":"255","messageId":"256","endLine":5,"endColumn":8,"fix":"331"},{"ruleId":"253","severity":2,"message":"332","line":6,"column":11,"nodeType":"255","messageId":"256","endLine":6,"endColumn":12,"fix":"333"},{"ruleId":"253","severity":2,"message":"254","line":11,"column":8,"nodeType":"255","messageId":"256","endLine":11,"endColumn":9,"fix":"334"},{"ruleId":"253","severity":2,"message":"254","line":12,"column":5,"nodeType":"255","messageId":"256","endLine":12,"endColumn":6,"fix":"335"},{"ruleId":"253","severity":2,"message":"254","line":13,"column":7,"nodeType":"255","messageId":"256","endLine":13,"endColumn":8,"fix":"336"},{"ruleId":"253","severity":2,"message":"332","line":14,"column":9,"nodeType":"255","messageId":"256","endLine":14,"endColumn":10,"fix":"337"},{"ruleId":"253","severity":2,"message":"254","line":17,"column":7,"nodeType":"255","messageId":"256","endLine":17,"endColumn":8,"fix":"338"},{"ruleId":"253","severity":2,"message":"254","line":18,"column":6,"nodeType":"255","messageId":"256","endLine":18,"endColumn":7,"fix":"339"},{"ruleId":"304","severity":2,"message":"310","line":23,"column":7,"nodeType":"306","messageId":"307","endLine":23,"endColumn":23,"fix":"340"},{"ruleId":"271","severity":2,"message":"313","line":26,"column":34,"nodeType":"241","messageId":"273","endLine":26,"endColumn":41},{"ruleId":"253","severity":2,"message":"254","line":26,"column":37,"nodeType":"255","messageId":"256","endLine":26,"endColumn":38,"fix":"341"},{"ruleId":"271","severity":2,"message":"342","line":26,"column":42,"nodeType":"241","messageId":"273","endLine":26,"endColumn":56},{"ruleId":"253","severity":2,"message":"332","line":26,"column":47,"nodeType":"255","messageId":"256","endLine":26,"endColumn":48,"fix":"343"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"246","endLine":1,"endColumn":49,"fix":"344"},{"ruleId":"229","severity":2,"message":"230","line":10,"column":5,"nodeType":"231","messageId":"232","endLine":11,"endColumn":42,"fix":"345"},{"ruleId":"253","severity":2,"message":"254","line":16,"column":30,"nodeType":"255","messageId":"256","endLine":16,"endColumn":31,"fix":"346"},{"ruleId":"304","severity":2,"message":"310","line":16,"column":31,"nodeType":"306","messageId":"307","endLine":16,"endColumn":47,"fix":"347"},{"ruleId":"253","severity":2,"message":"254","line":18,"column":26,"nodeType":"255","messageId":"256","endLine":18,"endColumn":27,"fix":"348"},{"ruleId":"349","severity":2,"message":"350","line":21,"column":14,"nodeType":"241","messageId":"351","endLine":21,"endColumn":23},{"ruleId":"253","severity":2,"message":"254","line":28,"column":28,"nodeType":"255","messageId":"256","endLine":28,"endColumn":29,"fix":"352"},{"ruleId":"253","severity":2,"message":"254","line":28,"column":38,"nodeType":"255","messageId":"256","endLine":28,"endColumn":39,"fix":"353"},{"ruleId":"354","severity":2,"message":"355","line":29,"column":7,"nodeType":"241","messageId":"356","endLine":29,"endColumn":10,"fix":"357"},{"ruleId":"253","severity":2,"message":"254","line":39,"column":34,"nodeType":"255","messageId":"256","endLine":39,"endColumn":35,"fix":"358"},"no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"359","text":"360"},{"range":"361","text":"360"},{"range":"362","text":"360"},{"range":"363","text":"360"},{"range":"364","text":"360"},{"range":"365","text":"360"},"@typescript-eslint/no-redeclare","'i' is already defined.","Identifier","redeclared","@typescript-eslint/consistent-type-imports","All imports in the declaration are only used as types. Use `import type`.","ImportDeclaration","typeOverValue",{"range":"366","text":"367"},"@typescript-eslint/consistent-indexed-object-style","A record is preferred over an index signature.","TSTypeLiteral","preferRecord",{"range":"368","text":"369"},"@typescript-eslint/type-annotation-spacing","Expected a space after the ':'.","Punctuator","expectedSpaceAfter",{"range":"370","text":"371"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'queryData'. Either include it or remove the dependency array.","ArrayExpression",["372"],"@typescript-eslint/no-shadow","'newsHotList' is already declared in the upper scope.","noShadow","'item' is already declared in the upper scope.","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"373","text":"374"},"no-unused-vars","'props' is defined but never used.","unusedVar","@typescript-eslint/no-unused-vars","'setLoaction' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchWeather'. Either include it or remove the dependency array.",["375"],"Import \"FC\" is only used as types.","aImportIsOnlyTypes",{"range":"376","text":"377"},{"range":"378","text":"367"},"'changeIcon' is assigned a value but never used.",{"range":"379","text":"371"},{"range":"380","text":"367"},{"range":"381","text":"371"},{"range":"382","text":"371"},{"range":"383","text":"374"},{"range":"384","text":"374"},{"range":"385","text":"374"},{"range":"386","text":"367"},"'TagModal' is defined but never used.","'index' is already declared in the upper scope.","react/no-array-index-key","Do not use Array index in keys","TemplateLiteral","noArrayIndex",{"range":"387","text":"377"},{"range":"388","text":"367"},"Import \"FocusEvent\" is only used as types.",{"range":"389","text":"390"},"Import \"InputRef\" is only used as types.",{"range":"391","text":"392"},{"range":"393","text":"367"},"@typescript-eslint/array-type","Array type using 'Array<string>' is forbidden. Use 'string[]' instead.","TSTypeReference","errorStringArray",{"range":"394","text":"395"},{"range":"396","text":"367"},"Array type using 'Array<LabelType>' is forbidden. Use 'LabelType[]' instead.",{"range":"397","text":"398"},{"range":"399","text":"398"},"'tag' is defined but never used.","'changeTag' is assigned a value but never used.","'unHeatTag' is assigned a value but never used.","no-param-reassign","Assignment to function parameter 'params'.","assignmentToFunctionParam","'a' is assigned a value but never used.","'ctx' is defined but never used.","'uuid' is defined but never used.","'index' is defined but never used.","'searchList' is assigned a value but never used.",{"range":"400","text":"371"},{"range":"401","text":"371"},{"range":"402","text":"371"},{"range":"403","text":"371"},{"range":"404","text":"371"},{"range":"405","text":"371"},{"range":"406","text":"371"},{"range":"407","text":"371"},"Expected a space after the '?:'.",{"range":"408","text":"371"},{"range":"409","text":"371"},{"range":"410","text":"371"},{"range":"411","text":"371"},{"range":"412","text":"371"},{"range":"413","text":"371"},{"range":"414","text":"371"},{"range":"415","text":"398"},{"range":"416","text":"371"},"'oper' is defined but never used.",{"range":"417","text":"371"},{"range":"418","text":"367"},{"range":"419","text":"360"},{"range":"420","text":"371"},{"range":"421","text":"398"},{"range":"422","text":"371"},"@typescript-eslint/no-use-before-define","'uniqueKey' was used before it was defined.","noUseBeforeDefine",{"range":"423","text":"371"},{"range":"424","text":"371"},"prefer-const","'map' is never reassigned. Use 'const' instead.","useConst",{"range":"425","text":"426"},{"range":"427","text":"371"},[213,216],"let",[269,272],[321,324],[356,359],[400,403],[444,447],[108,108]," type",[456,497],"Record<string, [HotMessageType]>",[539,539]," ",{"desc":"428","fix":"429"},[3990,3997]," />",{"desc":"430","fix":"431"},[55,67],"import type { FC} from \"react\";\nimport {",[151,151],[1134,1134],[200,200],[490,490],[519,519],[1665,1673],[1688,1696],[1711,1719],[172,172],[0,12],[6,6],[153,182],"import type { FocusEvent} from \"react\";\nimport { useState",[208,232],"import type { InputRef } from \"antd\";\nimport { Input",[108,108],[307,320],"string[]",[147,147],[405,421],"LabelType[]",[466,482],[41,41],[55,55],[106,106],[39,39],[61,61],[86,86],[70,70],[86,86],[106,106],[235,235],[249,249],[265,265],[286,286],[333,333],[348,348],[410,426],[499,499],[509,509],[6,6],[353,356],[502,502],[502,518],[554,554],[697,697],[707,707],[722,741],"const map = new Map()",[919,919],"Update the dependencies array to be: [currentKey, queryData]",{"range":"432","text":"433"},"Update the dependencies array to be: [fetchWeather, location]",{"range":"434","text":"435"},[1678,1690],"[currentKey, queryData]",[827,837],"[fetchWeather, location]"]